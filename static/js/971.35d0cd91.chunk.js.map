{"version":3,"file":"static/js/971.35d0cd91.chunk.js","mappings":"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","sources":["components/BtnLoadMore/BtnLoadMore.styled.js","components/BtnLoadMore/BtnLoadMore.jsx","components/FilterMenu/FilterMenu.styled.js","components/FilterMenu/FilterMenu.jsx","components/TeacherCard/TeacherCard.styled.js","components/EducationalBkg/EducationalBkg.styled.js","components/EducationalBkg/EducationalBkg.jsx","components/LoginAndRegisterModal/TrialLessonModal.jsx","components/TeacherCard/TeacherCard.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const ButtonLoadMore = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  width: 183px;\n  height: 60px;\n  background: ${color.darkGgeen};\n  border-radius: 12px; \n  margin: 0 auto;\n\n  transition: background 0.25s linear;\n  &:hover,\n  &:focus {    \n    background: ${color.lightGreene}; \n  }\n   &:active {\n    background: linear-gradient(to bottom, ${color.darkGgeen}, ${color.lightGreene});\n  }\n`","import {  ButtonLoadMore } from \"./BtnLoadMore.styled\";\n\nexport default function BtnLoadMore({ handleLoadMore }) {    \n    return (  \n        <ButtonLoadMore onClick={handleLoadMore}>Load more</ButtonLoadMore>\n    );\n}","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const WraperMenu = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 32px;\n  min-width: 1184px;\n\n  @media (max-width: 1260px) {\n    min-width: auto;\n  };\n`\n\nexport const TitleMenu = styled.p`\n  font-weight: 500;\n  color: ${color.subtitleColor};\n  margin-bottom:8px;\n`\n\nexport const OptLanguages = styled.li`\n  font-weight: 500;\n`\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n\n  font-weight: 500;\n  font-size: 18px;\n  height: 48px;\n  border-radius: 14px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  background-color: ${color.whitePrimary};\n  padding: 10px;\n\n  min-width: ${props => props.width || '221px'};\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  left: 0;\n  background-color: ${color.whitePrimary};\n  border: 1px solid ${color.greySuperLight};\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 0 0 12px 12px;\n\n  ${Dropdown}:hover & {\n    display: block;\n  }\n`;\n\nexport const DropdownItem = styled.li`\n  padding: 10px;\n  cursor: pointer;  \n\n  &:hover {\n    background-color: ${color.greySuperLight};\n  }\n`;\n\nexport const ResetButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 20px;\n  border-radius: 8px; \n  border: none;\n  outline: none;\n  margin-top: auto;\n\n  background-color: ${color.darkGgeen};\n  padding: 4px 12px;\n\n  transition: background 0.25s linear;\n  &:hover,\n  &:focus {    \n    background: ${color.lightGreene}; \n  }\n  &:active {\n    background: linear-gradient(to bottom, ${color.darkGgeen}, ${color.lightGreene});\n  }\n`;","import { useEffect, useState } from \"react\";\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, ResetButton, TitleMenu, WraperMenu } from \"./FilterMenu.styled\";\nimport { getDatabase, ref, get } from 'firebase/database';\nimport { toast } from \"react-toastify\";\n\nexport default function FilterMenu({setTeachers}) {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n    const [selectedLevels, setSelectedLevels] = useState(\"\");\n    const [selectedPrices, setSelectedPrices] = useState(\"\");\n    const [languageOptions, setLanguageOptions] = useState([]);\n    const [levelOptions, setLevelOptions] = useState([]);\n    const [levelPrices, setLevelPrices] = useState([]);\n    const db = getDatabase();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {         \n                const teachersRef = ref(db, 'teachers');\n                const snapshot = await get(teachersRef);\n                \n                if (snapshot.exists()) {\n                    const teachersData = snapshot.val();\n                    const teachersArray = Object.values(teachersData);\n\n                    const uniqueLanguages = Array.from(new Set(teachersArray.flatMap(teacher => teacher.languages)));\n                    const uniqueLevels = Array.from(new Set(teachersArray.flatMap(teacher => teacher.levels)));\n                    const uniquePrice = Array.from(new Set(teachersArray.flatMap(teacher => teacher.price_per_hour)));\n\n                    setLanguageOptions(uniqueLanguages);\n                    setLevelOptions(uniqueLevels);\n                    setLevelPrices(uniquePrice)\n\n\n                    const filteredTeachers = teachersArray.filter(teacher => {\n                        const filterByLanguage = selectedLanguage ? teacher.languages.includes(selectedLanguage) : true;\n                        const filterByLevel = selectedLevels ? teacher.levels.includes(selectedLevels) : true;\n                        const filterByPrice = selectedPrices ? teacher.price_per_hour === selectedPrices : true;\n                        \n                        return filterByLanguage && filterByLevel && filterByPrice;\n                    });\n\n                    setTeachers(filteredTeachers);\n                } else {\n                    toast.error(\"No data available\")\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };  \n        fetchData();\n    }, [db, selectedLanguage, selectedLevels, selectedPrices,  setTeachers]);\n\n    const handleMenuChange = (value, setValue) => {\n        setValue(value);\n    };\n\n    const resetFilters = () => {\n        setSelectedLanguage(\"\");\n        setSelectedLevels(\"\");\n        setSelectedPrices(\"\");\n    };\n\n    return (   \n        <WraperMenu>\n            <div>\n                <TitleMenu>Languages</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"221px\" >{selectedLanguage || \"Select Language\"}</DropdownButton>\n                    <DropdownList>\n                        {languageOptions.map((language, index) => (\n                            <DropdownItem key={index} value={language} onClick={() => handleMenuChange(language, setSelectedLanguage)}>\n                                {language}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>                   \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Level of knowledge</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"198px\" >{selectedLevels || \"Select Level\"}</DropdownButton>                    \n                    <DropdownList>\n                        {levelOptions.map((level, index) => (\n                            <DropdownItem key={index} value={level} onClick={() => handleMenuChange(level, setSelectedLevels)}>\n                                {level}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>                    \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Price</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"124px\" >{selectedPrices + \" $\" }</DropdownButton>                    \n                    <DropdownList>\n                        {levelPrices.sort((a, b) => a - b).map((price, index) => (\n                            <DropdownItem key={index} value={price} onClick={() => handleMenuChange(price, setSelectedPrices)}>\n                                {price}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>                    \n                </Dropdown>\n            </div>\n\n            { selectedLanguage || selectedLevels || selectedPrices ? <ResetButton onClick={resetFilters}>Reset</ResetButton> : null}\n\n        </WraperMenu>     \n    );\n}\n  \n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const WraperCard = styled.li`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 32px;\n    border-radius: 24px;\n    background: ${color.whitePrimary};\n    width: 1184px;\n    @media (max-width: 1216px) {\n       width: auto;\n    };\n`\nexport const CardHeartBtn = styled.button`\n    position: absolute;\n    top: 24px;\n    right: 24px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 18px;\n    height: 18px;\n    stroke:  ${color.blackPrimary};\n    background: transparent;\n`;\n\nexport const ImgCardConteiner = styled.div`\n    padding: 24px;    \n`\n\nexport const BorderImgCard = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%; \n    border: 3px solid ${color.lightGreene};    \n`\n\nexport const ImgCard = styled.img`\n    max-width: 96px;\n    border-radius: 50%;   \n`\n\nexport const ActiveGreenSvg = styled.svg`\n    position: absolute;\n    top: 17px;\n    right: 17px;  \n`\n\nexport const InformCardConteiner = styled.div`\n    padding: 24px;\n    font-weight: 500;    \n`\nexport const MainInfBlock = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 8px;    \n`\n\nexport const Subtitle = styled.h3`\n    font-size: 16px;\n    font-weight: 500;\n    color: ${color.subtitleColor};\n\n    @media (max-width: 1160px) {\n        margin-bottom: 12px;\n    };\n`\nexport const InformShortCardConteiner = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: 192px;\n    \n    @media (max-width: 1160px) {\n        margin-left: 40px;\n        margin-bottom: 32px;\n    };    \n`\n\nexport const LessonsOnline = styled.p`\n    display: flex;\n    align-items: center;\n    fill: ${color.whitePrimary};\n    stroke: ${color.blackPrimary};    \n    gap: 4px;\n`\n\nexport const Rating = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n`\n\nexport const Divider = styled.div`\n    position: relative;\n    display: inline-block;\n    margin: 0 16px; \n    \n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;        \n        height: 100%;\n        width: 1px;\n        background-color: ${color.greyDivider}; \n    }\n\n    @media (max-width: 560px) {\n       display: none;\n    };\n`;\n\n\nexport const Price = styled.span`\n    color: ${color.BrightGreen};\n`\n\nexport const FullName = styled.h2`\n    margin-bottom: 32px;\n    line-height: 1;\n`\n\n\nexport const BlockSkills = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 16px;  \n`\n\nexport const BlockShortInformationsTeacher = styled.div`\n    display: flex;\n    gap:2px;   \n`\nexport const LanguagesUnderlined = styled.p`\n    text-decoration: underline;   \n`\n\nexport const ReadMoreBtn = styled.button`\n    font-weight: 500;\n    margin-bottom: 32px;\n    font-size: 16px;\n    background: transparent;\n    text-decoration: underline;\n    &:hover {\n        text-decoration: none; \n    }\n`\n\n\nexport const LevelsList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: 1.14;\n`\n\nexport const LevelLanguage = styled.li`\n    padding: 8px 12px;\n    border-radius: 35px;\n    border: 1px solid ${color.greyDivider};\n\n    &:first-child {\n        border-color: transparent;\n        background: ${color.darkGgeen}\n    }\n`\n\n//////////////////////////////////////////////////////\n\nexport const TrialLessonBtn = styled.button`\n    font-weight: 700;\n    font-size: 18px;\n    margin-top: 32px;\n    background: transparent;\n    padding: 16px 48px 16px 48px;\n    background: ${color.darkGgeen};\n    border-radius: 12px;\n\n    transition: background 0.25s linear;\n    &:hover,\n    &:focus {    \n      background: ${color.lightGreene}; \n    }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const Experience = styled.p`    \n    margin-bottom: 32px;    \n`\n\nexport const CustomerReviewBlock = styled.li`    \n    margin-bottom: 32px;    \n`\nexport const ClientData = styled.div`\n    display: flex;\n    gap: 12px;\n    margin-bottom: 16px;    \n`\n\nexport const ClientImg = styled.img`\n    width: 44px;\n    border-radius: 50%;         \n`\n\nexport const ClientName = styled.h4`\n    font-weight: 500;\n    color: ${color.subtitleColor};        \n`\n\nexport const ClientGrade = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;        \n`","import { ClientData, ClientGrade, ClientImg, ClientName, CustomerReviewBlock, Experience } from \"./EducationalBkg.styled\";\nimport unknownImage from \"../../img/unknown-img.jpg\"\nimport sprite from '../../img/svg-file.svg';\n\nexport default function EducationalBkg({experience, reviews}) {\n    return ( \n        <>\n            <Experience>{experience}</Experience>\n            <ul>\n                {reviews.map(({reviewer_name, reviewer_rating, comment }, id) => (\n                    <CustomerReviewBlock key={id}>\n                        <ClientData>\n                            <ClientImg src={unknownImage} alt={reviewer_name} />\n                            <div>\n                                <ClientName>{reviewer_name}</ClientName>\n                                <ClientGrade>\n                                    <svg width={16} height={16}>\n                                        <use href={`${sprite}#icon-star`} />\n                                    </svg>\n                                    {reviewer_rating}.0\n                                </ClientGrade>\n                            </div>\n                        </ClientData>\n                        <p>{comment}</p>\n                    </CustomerReviewBlock>\n                ))}\n            </ul>\n        </>  \n    );\n}","import React, { useEffect, useState } from 'react';\nimport {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../img/svg-file.svg';\nimport { BtnClose, CheckBoxActive, CheckBoxActiveWrapper, FormGroup, GreenRadio, LabelRadio,  ModalTextTrail, ModalTitle, TitleOfRadioBtns, WrapperModalTrail, YourTeacher, YourTeacherBlock, YourTeacherImg, YourTeacherNane } from './LoginAndRegisterStyled/Modal.styled';\nimport {  FormBtn, FormField, FormFieldPassvord, FormFields } from './LoginAndRegisterStyled/Form.styled';\nimport { ErrorMessagePassword, ErrorMessageStyled } from 'components/TechersPage/TeachersPage.styled';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n    picked: '',\n    name: '',\n    email: '',\n    tel: '',\n  };\nconst schema = Yup.object({\n    picked:Yup.string().required('Required'),\n    name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    tel: Yup.string().required('Required')\n    .matches(/^[0-9]{10}$/, 'Phone number must contain exactly 10 digits'),\n  });\n\nexport default function TrialLessonModal({closeModals, fullName, img}) {\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [modalTop, setModalTop] = useState('50%');\n\n    useEffect(() => {\n        const handleResize = () => {\n            const modalHeight = document.getElementById('modal').offsetHeight;\n            const viewportHeight = window.innerHeight;\n  \n            if (modalHeight > viewportHeight) {\n                setModalTop('0');\n            } else {\n                setModalTop('50%');\n            }\n        };\n  \n        window.addEventListener('resize', handleResize);\n        handleResize();\n  \n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const handleSubmit = async (values, {resetForm, setFieldValue}) => {\n        await new Promise((r) => setTimeout(r, 500));\n        setFieldValue('picked', values.picked);\n        resetForm();\n        setSelectedOption(null)\n        closeModals()\n        toast.success(\"trial class booking added\")\n    }    \n\n    return (\n        <WrapperModalTrail style={{ top: modalTop }} id=\"modal\">\n            <BtnClose onClick={closeModals}>\n                <svg width={32} height={32}  >\n                    <use href={`${sprite}#icon-x`} />\n                </svg>\n            </BtnClose>\n\n            <ModalTitle>Book trial lesson</ModalTitle>\n            <ModalTextTrail>Our experienced tutor will assess your current language level, discuss your learning goals, and tailor the lesson to your specific needs.</ModalTextTrail>\n\n            <YourTeacherBlock>\n                <YourTeacherImg alt={fullName} src={img} />\n                <div>\n                    <YourTeacher>Your teacher</YourTeacher>\n                    <YourTeacherNane>{fullName}</YourTeacherNane>\n                </div>                \n            </YourTeacherBlock>\n\n            <div>   \n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={schema}\n                    onSubmit={handleSubmit}\n                >\n                    {({ errors, touched, setFieldValue }) => (\n                        <Form>\n                            <TitleOfRadioBtns id=\"my-radio-group\">What is your main reason for learning English?</TitleOfRadioBtns>\n                            <FormGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n                                <LabelRadio>\n                                    {selectedOption === 'careerBusiness' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                    }   \n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Career and business\"  onChange={() => {\n                                        setFieldValue('picked', 'careerBusiness');\n                                        setSelectedOption('careerBusiness')}}/>\n                                    \n                                    Career and business\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'lessonForKids' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                    }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Lesson for kids\" onChange={() => {\n                                        setFieldValue('picked', 'lessonForKids');\n                                        setSelectedOption('lessonForKids')}} />\n                                    Lesson for kids\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'livingAbroad' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                    }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Living abroad\"  onChange={() => {\n                                        setFieldValue('picked', 'livingAbroad');\n                                        setSelectedOption('livingAbroad')}} />\n                                    Living abroad\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'exams' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Exams and coursework\" onChange={() => {\n                                        setFieldValue('picked', 'exams');\n                                        setSelectedOption('exams')}}  />\n                                    Exams and coursework\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'culture' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Culture, travel or hobby\"  onChange={() => {\n                                        setFieldValue('picked', 'culture');\n                                        setSelectedOption('culture')}} />\n                                    Culture, travel or hobby\n                                </LabelRadio>\n                            </FormGroup>\n                            <ErrorMessagePassword name='picked' component='div' />\n\n                            <FormFields> \n                                <FormField name=\"name\" type=\"name\" placeholder=\"Full Name\" error={errors.name && touched.name ? \"true\" : \"false\" } />\n                                <ErrorMessageStyled name=\"name\" component='div' />\n\n                                <FormField name=\"email\" type=\"email\" placeholder=\"Email\"  error={errors.email && touched.email ? \"true\" : \"false\" } />\n                                <ErrorMessageStyled name=\"email\" component='div' />               \n\n                                <FormFieldPassvord  name=\"tel\" type=\"tel\" placeholder=\"Phone number\"  error={errors.tel && touched.tel ? \"true\" : \"false\"} />            <ErrorMessagePassword name=\"tel\" component='div' />\n                            </FormFields>\n\n                            <FormBtn type=\"submit\">Submit</FormBtn>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </WrapperModalTrail>\n    );\n}\n","import { ActiveGreenSvg, BlockShortInformationsTeacher, BlockSkills, BorderImgCard, CardHeartBtn, Divider, FullName, ImgCard, ImgCardConteiner, InformCardConteiner, InformShortCardConteiner, LanguagesUnderlined, LessonsOnline, LevelLanguage, LevelsList, MainInfBlock, Price, Rating, ReadMoreBtn, Subtitle, TrialLessonBtn, WraperCard } from \"./TeacherCard.styled\";\nimport sprite from '../../img/svg-file.svg';\nimport { useEffect, useState } from \"react\";\nimport EducationalBkg from \"components/EducationalBkg/EducationalBkg\";\nimport TrialLessonModal from \"components/LoginAndRegisterModal/TrialLessonModal\";\nimport { auth } from '../../firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport { toast } from \"react-toastify\";\n\nexport default function TeacherCard({teacher, handleFavorite, sourceComponent }) {\n  const [expanded, setExpanded] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [trailLessonModalOpen, setTrailLessonModalOpen] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      const userId = user?.uid;\n      const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n      setIsFavorite(storedFavorites.some(fav => fav.avatar_url === teacher.avatar_url));\n    });\n    \n    return () => unsubscribe();\n  }, [teacher.avatar_url]);\n\n\n  const openLoginModal = () => {\n    setTrailLessonModalOpen(true);\n  };\n  const handleReadMoreClick = () => {\n    setExpanded((prevExpanded) => !prevExpanded);\n  };\n\n  const handleHeartClick = () => {\n    const userId = auth.currentUser?.uid;\n    if (userId) {\n      const newIsFavorite = !isFavorite;\n      setIsFavorite(newIsFavorite);\n  \n      const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n  \n        if (newIsFavorite) {\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify([...storedFavorites, teacher]));          \n        } else {\n          const updatedFavorites = storedFavorites.filter((fav) => fav.avatar_url !== teacher.avatar_url);\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify(updatedFavorites));\n\n          if (sourceComponent === \"FavoritePage\") {\n            handleFavorite()\n          }\n        }        \n    } else {\n      toast.error(\"To add to favorites you must be logged in.\")\n    }\n  };\n\n  return (   \n    <WraperCard>\n      <CardHeartBtn onClick={handleHeartClick} >\n        <svg width={26} height={26} >\n          <use href={`${sprite}#${isFavorite ? 'icon-heart-active' : 'icon-normal-heart'}`}  />\n        </svg>\n      </CardHeartBtn>\n\n      <ImgCardConteiner>\n        <BorderImgCard>\n          <ImgCard src={teacher.avatar_url} alt=\"teacher photo\" />\n          <ActiveGreenSvg width={12} height={12} >\n            <use href={`${sprite}#icon-geen-circle`} />\n          </ActiveGreenSvg>\n        </BorderImgCard>               \n      </ImgCardConteiner>\n\n      <InformCardConteiner>\n        <MainInfBlock>\n          <Subtitle>Languages</Subtitle>      \n          <InformShortCardConteiner>\n          <LessonsOnline>\n            <svg width={16} height={16}>\n              <use href={`${sprite}#icon-book-open`} />\n            </svg>\n            Lessons online\n          </LessonsOnline>\n          <Divider />\n          <p>Lessons done: <span>{teacher.lessons_done}</span></p>\n          <Divider />\n          <Rating>\n            <svg width={16} height={16}>\n              <use href={`${sprite}#icon-star`} />\n            </svg>\n            Rating: <span>{teacher.rating}</span>\n          </Rating>\n          <Divider />\n          <p>Price / 1 hour: <Price> {teacher.price_per_hour}$</Price></p>\n          </InformShortCardConteiner>                    \n        </MainInfBlock>\n\n        <FullName>{teacher.name} {teacher.surname}</FullName>\n\n        <BlockSkills>\n          <BlockShortInformationsTeacher>\n            <Subtitle>Speaks:</Subtitle>\n            <LanguagesUnderlined>{teacher.languages.join(', ')}</LanguagesUnderlined>\n          </BlockShortInformationsTeacher>\n\n          <BlockShortInformationsTeacher>\n            <Subtitle>Lesson Info:</Subtitle>\n            <p>{teacher.lesson_info}</p>\n          </BlockShortInformationsTeacher>\n\n          <BlockShortInformationsTeacher>\n            <Subtitle>Conditions:</Subtitle>\n            <p>{teacher.conditions}</p>\n          </BlockShortInformationsTeacher>\n        </BlockSkills>\n\n        {expanded && <EducationalBkg experience={teacher.experience} reviews={teacher.reviews}/>}\n        {!expanded  && <ReadMoreBtn onClick={handleReadMoreClick}>Read more</ReadMoreBtn>}                      \n\n        <LevelsList>\n          {teacher.levels.map((language) => (\n            <LevelLanguage key={language} >\n              #{language}\n            </LevelLanguage>\n          ))}\n        </LevelsList>\n\n        {expanded && <TrialLessonBtn onClick={openLoginModal} >Book trial lesson</TrialLessonBtn>}\n               \n        <PortalModal active={trailLessonModalOpen} setActive={setTrailLessonModalOpen}>\n          <TrialLessonModal closeModals={() => setTrailLessonModalOpen()} img={teacher.avatar_url} fullName={`${teacher.name} ${teacher.surname}`} />\n        </PortalModal>\n      </InformCardConteiner>\n    </WraperCard>      \n  );\n}"],"names":["ButtonLoadMore","styled","_templateObject","_taggedTemplateLiteral","color","BtnLoadMore","_ref","handleLoadMore","_jsx","onClick","children","WraperMenu","TitleMenu","_templateObject2","Dropdown","_templateObject3","_templateObject4","DropdownButton","_templateObject5","props","width","DropdownList","_templateObject6","DropdownItem","_templateObject7","ResetButton","_templateObject8","FilterMenu","setTeachers","_useState","useState","_useState2","_slicedToArray","selectedLanguage","setSelectedLanguage","_useState3","_useState4","selectedLevels","setSelectedLevels","_useState5","_useState6","selectedPrices","setSelectedPrices","_useState7","_useState8","languageOptions","setLanguageOptions","_useState9","_useState10","levelOptions","setLevelOptions","_useState11","_useState12","levelPrices","setLevelPrices","db","getDatabase","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","teachersRef","snapshot","teachersData","teachersArray","uniqueLanguages","uniqueLevels","uniquePrice","filteredTeachers","_context","prev","next","ref","get","sent","exists","val","Object","values","Array","from","Set","flatMap","teacher","languages","levels","price_per_hour","filter","filterByLanguage","includes","filterByLevel","filterByPrice","toast","t0","console","error","stop","apply","arguments","handleMenuChange","value","setValue","_jsxs","map","language","index","level","sort","a","b","price","WraperCard","CardHeartBtn","ImgCardConteiner","BorderImgCard","ImgCard","ActiveGreenSvg","InformCardConteiner","MainInfBlock","Subtitle","_templateObject9","InformShortCardConteiner","_templateObject10","LessonsOnline","_templateObject11","Rating","_templateObject12","Divider","_templateObject13","Price","_templateObject14","FullName","_templateObject15","BlockSkills","_templateObject16","BlockShortInformationsTeacher","_templateObject17","LanguagesUnderlined","_templateObject18","ReadMoreBtn","_templateObject19","LevelsList","_templateObject20","LevelLanguage","_templateObject21","TrialLessonBtn","_templateObject22","Experience","CustomerReviewBlock","ClientData","ClientImg","ClientName","ClientGrade","EducationalBkg","experience","reviews","_Fragment","id","reviewer_name","reviewer_rating","comment","src","alt","height","href","concat","sprite","initialValues","picked","name","email","tel","schema","Yup","required","min","matches","TrialLessonModal","closeModals","fullName","img","selectedOption","setSelectedOption","modalTop","setModalTop","handleResize","modalHeight","document","getElementById","offsetHeight","viewportHeight","window","innerHeight","addEventListener","removeEventListener","handleSubmit","_ref3","resetForm","setFieldValue","Promise","r","setTimeout","_x","_x2","WrapperModalTrail","style","top","BtnClose","ModalTitle","ModalTextTrail","YourTeacherBlock","YourTeacherImg","YourTeacher","YourTeacherNane","Formik","validationSchema","onSubmit","_ref4","errors","touched","Form","TitleOfRadioBtns","FormGroup","role","LabelRadio","CheckBoxActiveWrapper","CheckBoxActive","GreenRadio","type","onChange","ErrorMessagePassword","component","FormFields","FormField","placeholder","ErrorMessageStyled","FormFieldPassvord","FormBtn","TeacherCard","handleFavorite","sourceComponent","expanded","setExpanded","isFavorite","setIsFavorite","trailLessonModalOpen","setTrailLessonModalOpen","unsubscribe","onAuthStateChanged","auth","user","userId","uid","storedFavorites","JSON","parse","localStorage","getItem","some","fav","avatar_url","_auth$currentUser","newIsFavorite","setItem","stringify","_toConsumableArray","updatedFavorites","lessons_done","rating","surname","join","lesson_info","conditions","prevExpanded","PortalModal","active","setActive"],"sourceRoot":""}