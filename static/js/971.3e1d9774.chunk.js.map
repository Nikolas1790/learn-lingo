{"version":3,"file":"static/js/971.3e1d9774.chunk.js","mappings":"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","sources":["components/BtnLoadMore/BtnLoadMore.styled.js","components/BtnLoadMore/BtnLoadMore.jsx","components/FilterMenu/FilterMenu.styled.js","components/FilterMenu/FilterMenu.jsx","components/TeacherCard/TeacherCard.styled.js","components/EducationalBkg/EducationalBkg.styled.js","components/EducationalBkg/EducationalBkg.jsx","components/LoginAndRegisterModal/TrialLessonModal.jsx","components/TeacherCard/TeacherCard.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const ButtonLoadMore = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  width: 183px;\n  height: 60px;\n  background: ${color.darkGgeen};\n  border-radius: 12px; \n  margin: 0 auto;\n\n  transition: background 0.25s linear;\n&:hover,\n&:focus {    \n  background: ${color.lightGreene}; \n}\n &:active {\n    background: linear-gradient(to bottom, ${color.darkGgeen}, ${color.lightGreene});\n  }\n\n`","import {  ButtonLoadMore } from \"./BtnLoadMore.styled\";\n\nexport default function BtnLoadMore({ handleLoadMore }) {    \n    return (  \n        <ButtonLoadMore onClick={handleLoadMore}>Load more</ButtonLoadMore>\n    );\n}","import styled from 'styled-components'\n\nexport const WraperMenu = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 32px;\nmin-width: 1184px;\n\n@media (max-width: 1260px) {\n  min-width: auto;\n  };\n\n`\n\nexport const TitleMenu = styled.p`\n  font-weight: 500;\n  color: rgb(138, 138, 137);\n  margin-bottom:8px;\n`\n\nexport const OptLanguages = styled.li`\n  font-weight: 500;\n\n`\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownButton = styled.button`\ndisplay: flex;\n\nfont-weight: 500;\nfont-size: 18px;\n  height: 48px;\n  border-radius: 14px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  background-color: #fff;\n  padding: 10px;\n  /* border: 1px solid red; */\n\n  min-width: ${props => props.width || '221px'};\n`;\n\nexport const DropdownList = styled.ul`\n\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  left: 0;\n  background-color: #fff;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 0 0 12px 12px;\n\n  ${Dropdown}:hover & {\n    display: block;\n  }\n`;\n\nexport const DropdownItem = styled.li`\n  padding: 10px;\n  cursor: pointer;\n  \n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, TitleMenu, WraperMenu } from \"./FilterMenu.styled\";\nimport { getDatabase, ref, get } from 'firebase/database';\n\n// const languages = [\"French\", \"English\", \"Mandarin Chinese\"];\n// const levels = [\"A1 Beginner\", \"A2 Elementary\", \"B1 Intermediate\"];\nconst prices = [10, 28, 30];\n\nexport default function FilterMenu({setTeachers}) {\n    const [selectedLanguage, setSelectedLanguage] = useState(\"French \");\n    const [selectedLevels, setSelectedLevels] = useState(\"A1 Beginner\");\n    const [selectedPrices, setSelectedPrices] = useState(prices[0]);\n\n    const [languageOptions, setLanguageOptions] = useState([]);\n    const [levelOptions, setLevelOptions] = useState([]);\n\n    \n    const db = getDatabase();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {         \n                const teachersRef = ref(db, 'teachers');\n                const snapshot = await get(teachersRef);\n                \n                if (snapshot.exists()) {\n                    const teachersData = snapshot.val();\n                    const teachersArray = Object.values(teachersData);\n\n                    const uniqueLanguages = Array.from(new Set(teachersArray.flatMap(teacher => teacher.languages)));\n                    const uniqueLevels = Array.from(new Set(teachersArray.flatMap(teacher => teacher.levels)));\n                    setLanguageOptions(uniqueLanguages);\n                    setLevelOptions(uniqueLevels);\n                    // Применяем фильтры\n                    const filteredTeachers = teachersArray.filter(teacher => {\n                        // console.log(teacher.price_per_hour)\n                        // console.log(selectedPrices)\n                        return (\n                            teacher.languages.includes(selectedLanguage) &&\n                            teacher.levels.includes(selectedLevels)\n                            // teacher.languages.includes(selectedLanguage) &&\n                            // teacher.levels.includes(selectedLevels) &&\n                            // teacher.price_per_hour === selectedPrices\n                        );\n                    });\n\n                    setTeachers(filteredTeachers);\n                } else {\n                    console.log('No data available');\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };  \n        fetchData();\n    }, [db, selectedLanguage, selectedLevels, selectedPrices, setTeachers]);\n\n    const handleMenuChange = (value, setValue) => {\n        setValue(value);\n    };\n\n    return (   \n        <WraperMenu>\n            <div>\n                <TitleMenu>Languages</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"221px\" >{selectedLanguage} </DropdownButton>\n                    <DropdownList>\n                        {languageOptions.map((language, index) => (\n                            <DropdownItem key={index} value={language} placeholder=\"hhhhhhhhhhhhhhhhhhhhhh\" onClick={() => handleMenuChange(language, setSelectedLanguage)}>\n                                {language}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                   \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Level of knowledge</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"198px\" >{selectedLevels}</DropdownButton>\n                    \n                    <DropdownList>\n                        {levelOptions.map((level, index) => (\n                            <DropdownItem key={index} value={level} onClick={() => handleMenuChange(level, setSelectedLevels)}>\n                                {level}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                    \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Price</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"124px\" >{selectedPrices} $</DropdownButton>\n                    \n                    <DropdownList>\n                        {prices.map((price, index) => (\n                            <DropdownItem key={index} value={price} onClick={() => handleMenuChange(price, setSelectedPrices)}>\n                                {price}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                    \n                </Dropdown>\n            </div>\n        </WraperMenu>     \n    );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const WraperCard = styled.li`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 32px;\n    border-radius: 24px;\n    background: ${color.whitePrimary};\n    width: 1184px;\n    @media (max-width: 1216px) {\n       width: auto;\n  };\n`\nexport const CardHeartBtn = styled.button`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n  stroke:  ${color.blackPrimary};\n  background: transparent;\n  /* stroke: black; */\n`;\n\nexport const ImgCardConteiner = styled.div`\n    padding: 24px;    \n`\n\nexport const BorderImgCard = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%; \n    border: 3px solid ${color.lightGreene};    \n`\n\nexport const ImgCard = styled.img`\n    max-width: 96px;\n    border-radius: 50%;   \n`\n\nexport const ActiveGreenSvg = styled.svg`\n    position: absolute;\n    top: 17px;\n    right: 17px;  \n`\n//////////////////////////////////////////////////////////\n\nexport const InformCardConteiner = styled.div`\n    padding: 24px;\n    font-weight: 500;    \n`\nexport const MainInfBlock = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 8px;    \n`\n\nexport const Subtitle = styled.h3`\n    font-size: 16px;\n    font-weight: 500;\n    color: ${color.subtitleColor};\n\n    @media (max-width: 1160px) {\n        margin-bottom: 12px;\n  };\n`\nexport const InformShortCardConteiner = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: 192px;\n    \n    @media (max-width: 1160px) {\n        margin-left: 40px;\n        margin-bottom: 32px;\n  };    \n`\n\nexport const LessonsOnline = styled.p`\n    display: flex;\n    align-items: center;\n    fill: ${color.whitePrimary};\n    stroke: ${color.blackPrimary};\n    \n    gap: 4px;\n`\n\nexport const Rating = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n`\n\nexport const Divider = styled.div`\n    position: relative;\n    display: inline-block;\n    margin: 0 16px; \n    \n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;        \n        height: 100%;\n        width: 1px;\n        background-color: rgba(18, 20, 23, 0.2); \n    }\n\n    @media (max-width: 560px) {\n       display: none;\n  };\n`;\n\n\n\nexport const Price = styled.span`\n     color: ${color.BrightGreen};\n`\n\nexport const FullName = styled.h2`\n    margin-bottom: 32px;\n    line-height: 1;\n`\n\n\nexport const BlockSkills = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 16px;  \n`\n\nexport const BlockShortInformationsTeacher = styled.div`\n    display: flex;\n    gap:2px;   \n`\nexport const LanguagesUnderlined = styled.p`\n    text-decoration: underline;   \n`\n\nexport const ReadMoreBtn = styled.button`\n    font-weight: 500;\n    margin-bottom: 32px;\n    font-size: 16px;\n    background: transparent;\n    text-decoration: underline; \n\n    &:hover {\n        text-decoration: none; \n    }\n`\n\n\nexport const LevelsList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: 1.14;\n`\n\nexport const LevelLanguage = styled.li`\n    padding: 8px 12px;\n    border-radius: 35px;\n    border: 1px solid rgba(18, 20, 23, 0.2);\n\n    &:first-child {\n        border-color: transparent;\n        background: ${color.darkGgeen}\n    }\n`\n\n//////////////////////////////////////////////////////\n\nexport const TrialLessonBtn = styled.button`\n    font-weight: 700;\n    font-size: 18px;\n    margin-top: 32px;\n    background: transparent;\n    padding: 16px 48px 16px 48px;\n    background: ${color.darkGgeen};\n    border-radius: 12px;\n\n    transition: background 0.25s linear;\n    &:hover,\n    &:focus {    \n      background: ${color.lightGreene}; \n    }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const Experience = styled.p`\n    \n    margin-bottom: 32px;\n    \n`\n\nexport const CustomerReviewBlock = styled.li`\n    \n    margin-bottom: 32px;\n    \n`\nexport const ClientData = styled.div`\n    display: flex;\n    gap: 12px;\n    margin-bottom: 16px;\n    \n`\n\nexport const ClientImg = styled.img`\n    width: 44px;\n    border-radius: 50%; \n        \n`\n\nexport const ClientName = styled.h4`\n    font-weight: 500;\n    color: ${color.subtitleColor};\n        \n`\n\nexport const ClientGrade = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n        \n`","import { ClientData, ClientGrade, ClientImg, ClientName, CustomerReviewBlock, Experience } from \"./EducationalBkg.styled\";\nimport unknownImage from \"../../img/unknown-img.jpg\"\nimport sprite from '../../img/svg-file.svg';\n\nexport default function EducationalBkg({experience, reviews}) {\n    return ( \n        <>\n            <Experience>{experience}</Experience>\n            <ul>\n                {reviews.map(({reviewer_name, reviewer_rating, comment }, id) => (\n                    <CustomerReviewBlock key={id}>\n                        <ClientData>\n                            <ClientImg src={unknownImage} alt={reviewer_name} />\n                            <div>\n                                <ClientName>{reviewer_name}</ClientName>\n                                <ClientGrade>\n                                    <svg width={16} height={16}>\n                                        <use href={`${sprite}#icon-star`} />\n                                    </svg>\n                                    {reviewer_rating}.0\n                                </ClientGrade>\n                            </div>\n                        </ClientData>\n                        <p>{comment}</p>\n                    </CustomerReviewBlock>\n                ))}\n            </ul>\n        </>  \n    );\n}","import React, { useEffect, useState } from 'react';\nimport {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../img/svg-file.svg';\nimport { BtnClose, CheckBoxActive, CheckBoxActiveWrapper, FormGroup, GreenRadio, LabelRadio,  ModalTextTrail, ModalTitle, TitleOfRadioBtns, WrapperModalTrail, YourTeacher, YourTeacherBlock, YourTeacherImg, YourTeacherNane } from './LoginAndRegisterStyled/Modal.styled';\nimport {  FormBtn, FormField, FormFieldPassvord, FormFields } from './LoginAndRegisterStyled/Form.styled';\nimport { ErrorMessagePassword, ErrorMessageStyled } from 'components/TechersPage/TeachersPage.styled';\n\nconst initialValues = {\n    picked: '',\n    name: '',\n    email: '',\n    tel: '',\n  };\nconst schema = Yup.object({\n    picked:Yup.string().required('Required'),\n    name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    tel: Yup.string().required('Required')\n    .matches(/^[0-9]{10}$/, 'Phone number must contain exactly 10 digits'),\n  });\n\nexport default function TrialLessonModal({closeModals, fullName, img}) {\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [modalTop, setModalTop] = useState('50%');\n\n    useEffect(() => {\n      const handleResize = () => {\n        const modalHeight = document.getElementById('modal').offsetHeight;\n        const viewportHeight = window.innerHeight;\n  \n        if (modalHeight > viewportHeight) {\n          setModalTop('0');\n        } else {\n          setModalTop('50%');\n        }\n      };\n  \n      window.addEventListener('resize', handleResize);\n      handleResize();\n  \n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }, []);\n  \n    // function handleCloseBtn() {\n    //     closeModals();\n    //     console.log(\"hhhhhhh\")\n    //   };\n\n  return (\n        <WrapperModalTrail style={{ top: modalTop }} id=\"modal\">\n            <BtnClose onClick={closeModals}>\n                <svg width={32} height={32}  >\n                    <use href={`${sprite}#icon-x`} />\n                </svg>\n            </BtnClose>\n\n            <ModalTitle>Book trial lesson</ModalTitle>\n            <ModalTextTrail>Our experienced tutor will assess your current language level, discuss your learning goals, and tailor the lesson to your specific needs.</ModalTextTrail>\n\n            <YourTeacherBlock>\n                <YourTeacherImg alt={fullName} src={img} />\n                <div>\n                    <YourTeacher>Your teacher</YourTeacher>\n                    <YourTeacherNane>{fullName}</YourTeacherNane>\n                </div>                \n            </YourTeacherBlock>\n\n\n            <div>   \n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={schema}\n                    onSubmit={async (values, {resetForm, setFieldValue}) => {\n                        await new Promise((r) => setTimeout(r, 500));\n                        setFieldValue('picked', values.picked);\n                        resetForm();\n                        setSelectedOption(null)\n                        closeModals()\n                    }}\n                >\n                    {({ errors, touched, setFieldValue }) => (\n                        <Form>\n                            <TitleOfRadioBtns id=\"my-radio-group\">What is your main reason for learning English?</TitleOfRadioBtns>\n                            <FormGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n                                <LabelRadio>\n                                {selectedOption === 'careerBusiness' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                 }   \n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Career and business\"  onChange={() => {\n                                        setFieldValue('picked', 'careerBusiness');\n                                        setSelectedOption('careerBusiness')}}/>\n                                    \n                                    Career and business\n                                </LabelRadio>\n                                <LabelRadio>\n                                {selectedOption === 'lessonForKids' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Lesson for kids\" onChange={() => {\n                                        setFieldValue('picked', 'lessonForKids');\n                                        setSelectedOption('lessonForKids')}} />\n                                    Lesson for kids\n                                </LabelRadio>\n                                <LabelRadio>\n                                {selectedOption === 'livingAbroad' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                 }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Living abroad\"  onChange={() => {\n                                        setFieldValue('picked', 'livingAbroad');\n                                        setSelectedOption('livingAbroad')}} />\n                                    Living abroad\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'exams' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Exams and coursework\" onChange={() => {\n                                        setFieldValue('picked', 'exams');\n                                        setSelectedOption('exams')}}  />\n                                    Exams and coursework\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'culture' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Culture, travel or hobby\"  onChange={() => {\n                                        setFieldValue('picked', 'culture');\n                                        setSelectedOption('culture')}} />\n                                    Culture, travel or hobby\n                                </LabelRadio>\n                                </FormGroup>\n                                <ErrorMessagePassword name='picked' component='div' />\n\n                            <FormFields>        \n\n                                <FormField name=\"name\" type=\"name\" placeholder=\"Full Name\" style={{\n                                    borderColor:\n                                        errors.name && touched.name ? \"red\" : null,\n                                    }}\n                                />\n                                <ErrorMessageStyled name=\"name\" component='div' />\n\n                                <FormField name=\"email\" type=\"email\" placeholder=\"Email\" style={{\n                                    borderColor:\n                                        errors.email && touched.email ? \"red\" : null,\n                                    }}  \n                                />\n                                <ErrorMessageStyled name=\"email\" component='div' />               \n\n                                <FormFieldPassvord  name=\"tel\" type=\"tel\" placeholder=\"Phone number\"  style={{\n                                    borderColor:\n                                        errors.tel && touched.tel ? \"red\" : null,\n                                    }} \n                                />               \n                                <ErrorMessagePassword name=\"tel\" component='div' />\n                \n                            </FormFields>\n\n                            <FormBtn type=\"submit\">Submit</FormBtn>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </WrapperModalTrail>\n  );\n}\n","import { ActiveGreenSvg, BlockShortInformationsTeacher, BlockSkills, BorderImgCard, CardHeartBtn, Divider, FullName, ImgCard, ImgCardConteiner, InformCardConteiner, InformShortCardConteiner, LanguagesUnderlined, LessonsOnline, LevelLanguage, LevelsList, MainInfBlock, Price, Rating, ReadMoreBtn, Subtitle, TrialLessonBtn, WraperCard } from \"./TeacherCard.styled\";\nimport sprite from '../../img/svg-file.svg';\nimport { useEffect, useState } from \"react\";\nimport EducationalBkg from \"components/EducationalBkg/EducationalBkg\";\nimport TrialLessonModal from \"components/LoginAndRegisterModal/TrialLessonModal\";\nimport { auth } from '../../firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\n\nexport default function TeacherCard({teacher, handleFavorite, sourceComponent }) {\n    const [expanded, setExpanded] = useState(false);\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [trailLessonModalOpen, setTrailLessonModalOpen] = useState(false);\n\n    useEffect(() => {\n      const unsubscribe = onAuthStateChanged(auth, (user) => {\n        const userId = user?.uid;\n        const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n        setIsFavorite(storedFavorites.some(fav => fav.avatar_url === teacher.avatar_url));\n      });\n    \n      return () => unsubscribe();\n    }, [teacher.avatar_url]);\n\n\n    const openLoginModal = () => {\n      setTrailLessonModalOpen(true);\n    };\n    const handleReadMoreClick = () => {\n      setExpanded((prevExpanded) => !prevExpanded);\n    };\n\n    const handleHeartClick = () => {\n      const userId = auth.currentUser?.uid;\n      if (userId) {\n        const newIsFavorite = !isFavorite;\n        setIsFavorite(newIsFavorite);\n  \n        const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n  \n        if (newIsFavorite) {\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify([...storedFavorites, teacher]));\n          \n        } else {\n          const updatedFavorites = storedFavorites.filter((fav) => fav.avatar_url !== teacher.avatar_url);\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify(updatedFavorites));\n\n          if (sourceComponent === \"FavoritePage\") {\n            handleFavorite()\n          }\n        }        \n      } else {\n        alert(\"To add to favorites you must be logged in.\");\n      }\n    };\n\n\n    return (   \n        <WraperCard>\n          <CardHeartBtn onClick={handleHeartClick} >\n            <svg width={26} height={26} >\n              <use href={`${sprite}#${isFavorite ? 'icon-heart-active' : 'icon-normal-heart'}`}  />\n            </svg>\n          </CardHeartBtn>\n\n          <ImgCardConteiner>\n          <BorderImgCard>\n              <ImgCard src={teacher.avatar_url} alt=\"teachers photo\" />\n              <ActiveGreenSvg width={12} height={12} >\n                <use href={`${sprite}#icon-geen-circle`} />\n              </ActiveGreenSvg>\n\n            </BorderImgCard>               \n          </ImgCardConteiner>\n\n            <InformCardConteiner>\n                <MainInfBlock>\n                  <Subtitle>Languages</Subtitle>      \n        <InformShortCardConteiner>\n                  <LessonsOnline>\n                    <svg width={16} height={16}>\n                      <use href={`${sprite}#icon-book-open`} />\n                    </svg>\n                    Lessons online\n                  </LessonsOnline>\n                  <Divider />\n                  <p>Lessons done: <span>{teacher.lessons_done}</span></p>\n                  <Divider />\n                  <Rating>\n                    <svg width={16} height={16}>\n                      <use href={`${sprite}#icon-star`} />\n                    </svg>\n                    Rating: <span>{teacher.rating}</span>\n                  </Rating>\n                  <Divider />\n                  <p>Price / 1 hour: <Price> {teacher.price_per_hour}$</Price></p>\n          </InformShortCardConteiner>\n                    \n                </MainInfBlock>\n\n                <FullName>{teacher.name} {teacher.surname}</FullName>\n\n                <BlockSkills>\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Speaks:</Subtitle>\n                    <LanguagesUnderlined>{teacher.languages.join(', ')}</LanguagesUnderlined>\n                  </BlockShortInformationsTeacher>\n\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Lesson Info:</Subtitle>\n                    <p>{teacher.lesson_info}</p>\n                  </BlockShortInformationsTeacher>\n\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Conditions:</Subtitle>\n                    <p>{teacher.conditions}</p>\n                  </BlockShortInformationsTeacher>\n                </BlockSkills>\n\n                {expanded && <EducationalBkg experience={teacher.experience} reviews={teacher.reviews}/>}\n                {!expanded  && <ReadMoreBtn onClick={handleReadMoreClick}>Read more</ReadMoreBtn>}                      \n\n                <LevelsList>\n                    {teacher.levels.map((language) => (\n                        <LevelLanguage key={language} >\n                          #{language}\n                        </LevelLanguage>\n                    ))}\n                </LevelsList>\n\n                {expanded && <TrialLessonBtn onClick={openLoginModal} >Book trial lesson</TrialLessonBtn>}\n               \n                <PortalModal active={trailLessonModalOpen} setActive={setTrailLessonModalOpen}>\n                  <TrialLessonModal closeModals={() => setTrailLessonModalOpen()} img={teacher.avatar_url} fullName={`${teacher.name} ${teacher.surname}`} />\n                </PortalModal>\n            </InformCardConteiner>\n        </WraperCard>      \n    );\n}"],"names":["ButtonLoadMore","styled","_templateObject","_taggedTemplateLiteral","color","BtnLoadMore","_ref","handleLoadMore","_jsx","onClick","children","WraperMenu","TitleMenu","_templateObject2","Dropdown","_templateObject3","_templateObject4","DropdownButton","_templateObject5","props","width","DropdownList","_templateObject6","DropdownItem","_templateObject7","prices","FilterMenu","setTeachers","_useState","useState","_useState2","_slicedToArray","selectedLanguage","setSelectedLanguage","_useState3","_useState4","selectedLevels","setSelectedLevels","_useState5","_useState6","selectedPrices","setSelectedPrices","_useState7","_useState8","languageOptions","setLanguageOptions","_useState9","_useState10","levelOptions","setLevelOptions","db","getDatabase","useEffect","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","teachersRef","snapshot","teachersData","teachersArray","uniqueLanguages","uniqueLevels","filteredTeachers","_context","prev","next","ref","get","sent","exists","val","Object","values","Array","from","Set","flatMap","teacher","languages","levels","filter","includes","console","log","t0","error","stop","apply","arguments","handleMenuChange","value","setValue","_jsxs","map","language","index","placeholder","level","price","WraperCard","CardHeartBtn","ImgCardConteiner","BorderImgCard","ImgCard","ActiveGreenSvg","InformCardConteiner","MainInfBlock","_templateObject8","Subtitle","_templateObject9","InformShortCardConteiner","_templateObject10","LessonsOnline","_templateObject11","Rating","_templateObject12","Divider","_templateObject13","Price","_templateObject14","FullName","_templateObject15","BlockSkills","_templateObject16","BlockShortInformationsTeacher","_templateObject17","LanguagesUnderlined","_templateObject18","ReadMoreBtn","_templateObject19","LevelsList","_templateObject20","LevelLanguage","_templateObject21","TrialLessonBtn","_templateObject22","Experience","CustomerReviewBlock","ClientData","ClientImg","ClientName","ClientGrade","EducationalBkg","experience","reviews","_Fragment","id","reviewer_name","reviewer_rating","comment","src","alt","height","href","concat","sprite","initialValues","picked","name","email","tel","schema","Yup","required","min","matches","TrialLessonModal","closeModals","fullName","img","selectedOption","setSelectedOption","modalTop","setModalTop","handleResize","modalHeight","document","getElementById","offsetHeight","viewportHeight","window","innerHeight","addEventListener","removeEventListener","WrapperModalTrail","style","top","BtnClose","ModalTitle","ModalTextTrail","YourTeacherBlock","YourTeacherImg","YourTeacher","YourTeacherNane","Formik","validationSchema","onSubmit","_ref3","resetForm","setFieldValue","Promise","r","setTimeout","_x","_x2","_ref4","errors","touched","Form","TitleOfRadioBtns","FormGroup","role","LabelRadio","CheckBoxActiveWrapper","CheckBoxActive","GreenRadio","type","onChange","ErrorMessagePassword","component","FormFields","FormField","borderColor","ErrorMessageStyled","FormFieldPassvord","FormBtn","TeacherCard","handleFavorite","sourceComponent","expanded","setExpanded","isFavorite","setIsFavorite","trailLessonModalOpen","setTrailLessonModalOpen","unsubscribe","onAuthStateChanged","auth","user","userId","uid","storedFavorites","JSON","parse","localStorage","getItem","some","fav","avatar_url","_auth$currentUser","newIsFavorite","setItem","stringify","_toConsumableArray","updatedFavorites","alert","lessons_done","rating","price_per_hour","surname","join","lesson_info","conditions","prevExpanded","PortalModal","active","setActive"],"sourceRoot":""}