{"version":3,"file":"static/js/971.7da3dd71.chunk.js","mappings":"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","sources":["components/BtnLoadMore/BtnLoadMore.styled.js","components/BtnLoadMore/BtnLoadMore.jsx","components/FilterMenu/FilterMenu.styled.js","components/FilterMenu/FilterMenu.jsx","components/TeacherCard/TeacherCard.styled.js","components/EducationalBkg/EducationalBkg.styled.js","components/EducationalBkg/EducationalBkg.jsx","components/LoginAndRegisterModal/TrialLessonModal.jsx","components/TeacherCard/TeacherCard.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const ButtonLoadMore = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  width: 183px;\n  height: 60px;\n  background: ${color.darkGgeen};\n  border-radius: 12px; \n  margin: 0 auto;\n\n  transition: background 0.25s linear;\n&:hover,\n&:focus {    \n  background: ${color.lightGreene}; \n}\n &:active {\n    background: linear-gradient(to bottom, ${color.darkGgeen}, ${color.lightGreene});\n  }\n\n`","import {  ButtonLoadMore } from \"./BtnLoadMore.styled\";\n\nexport default function BtnLoadMore({ handleLoadMore }) {    \n    return (  \n        <ButtonLoadMore onClick={handleLoadMore}>Load more</ButtonLoadMore>\n    );\n}","import styled from 'styled-components'\n\nexport const WraperMenu = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 32px;\n\n`\n\nexport const TitleMenu = styled.p`\n  font-weight: 500;\n  color: rgb(138, 138, 137);\n  margin-bottom:8px;\n`\n\nexport const OptLanguages = styled.li`\n  font-weight: 500;\n\n`\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownButton = styled.button`\ndisplay: flex;\n\nfont-weight: 500;\nfont-size: 18px;\n  height: 48px;\n  border-radius: 14px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  background-color: #fff;\n  padding: 10px;\n  /* border: 1px solid red; */\n\n  width: ${props => props.width || '221px'};\n`;\n\nexport const DropdownList = styled.ul`\n\n  position: absolute;\n  z-index: 1;\n  top: 100%;\n  left: 0;\n  background-color: #fff;\n  border: 1px solid rgba(18, 20, 23, 0.1);\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 0 0 12px 12px;\n\n  ${Dropdown}:hover & {\n    display: block;\n  }\n`;\n\nexport const DropdownItem = styled.li`\n  padding: 10px;\n  cursor: pointer;\n  \n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;","import { useState } from \"react\";\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, TitleMenu, WraperMenu } from \"./FilterMenu.styled\";\n\nconst languages = [\"French\", \"English\", \"Mandarin Chinese\"];\nconst levels = [\"A1 Beginner\", \"A2 Elementary\", \"B1 Intermediate\"];\nconst prices = [\"10 $\", \"20 $\", \"30 $\"];\n\nexport default function FilterMenu() {\n    const [selectedLanguage, setSelectedLanguage] = useState(languages[0]);\n    const [selectedLevels, setSelectedLevels] = useState(levels[0]);\n    const [selectedPrices, setSelectedPrices] = useState(prices[0]);\n\n    const handleMenuChange = (value, setValue) => {\n        setValue(value);\n    };\n\n    return (   \n        <WraperMenu>\n            <div>\n                <TitleMenu>Languages</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"221px\" >{selectedLanguage}</DropdownButton>\n                    <DropdownList>\n                        {languages.map((language, index) => (\n                            <DropdownItem key={index} value={language} onClick={() => handleMenuChange(language, setSelectedLanguage)}>\n                                {language}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                   \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Level of knowledge</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"198px\" >{selectedLevels}</DropdownButton>\n                    \n                    <DropdownList>\n                        {levels.map((level, index) => (\n                            <DropdownItem key={index} value={level} onClick={() => handleMenuChange(level, setSelectedLevels)}>\n                                {level}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                    \n                </Dropdown>\n            </div>\n\n            <div>\n                <TitleMenu>Price</TitleMenu>\n                <Dropdown>\n                    <DropdownButton width=\"124px\" >{selectedPrices}</DropdownButton>\n                    \n                    <DropdownList>\n                        {prices.map((price, index) => (\n                            <DropdownItem key={index} value={price} onClick={() => handleMenuChange(price, setSelectedPrices)}>\n                                {price}\n                            </DropdownItem>\n                        ))}\n                    </DropdownList>\n                    \n                </Dropdown>\n            </div>\n        </WraperMenu>     \n    );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const WraperCard = styled.li`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 32px;\n    border-radius: 24px;\n    background: ${color.whitePrimary};\n    width: 1184px;\n    @media (max-width: 1216px) {\n       width: auto;\n  };\n`\nexport const CardHeartBtn = styled.button`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const ImgCardConteiner = styled.div`\n    padding: 24px;    \n`\n\nexport const BorderImgCard = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 120px;\n    height: 120px;\n    border-radius: 50%; \n    border: 3px solid ${color.lightGreene};    \n`\n\nexport const ImgCard = styled.img`\n    max-width: 96px;\n    border-radius: 50%;   \n`\n\nexport const ActiveGreenSvg = styled.svg`\n    position: absolute;\n    top: 17px;\n    right: 17px;  \n`\n//////////////////////////////////////////////////////////\n\nexport const InformCardConteiner = styled.div`\n    padding: 24px;\n    font-weight: 500;    \n`\nexport const MainInfBlock = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 8px;    \n`\n\nexport const Subtitle = styled.h3`\n    font-size: 16px;\n    font-weight: 500;\n    color: ${color.subtitleColor};\n\n    @media (max-width: 1160px) {\n        margin-bottom: 12px;\n  };\n`\nexport const InformShortCardConteiner = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: 192px;\n    \n    @media (max-width: 1160px) {\n        margin-left: 40px;\n        margin-bottom: 32px;\n  };    \n`\n\nexport const LessonsOnline = styled.p`\n    display: flex;\n    align-items: center;\n    fill: ${color.whitePrimary};\n    stroke: ${color.blackPrimary};\n    \n    gap: 4px;\n`\n\nexport const Rating = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 4px;\n`\n\nexport const Divider = styled.div`\n    position: relative;\n    display: inline-block;\n    margin: 0 16px; \n    \n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;        \n        height: 100%;\n        width: 1px;\n        background-color: rgba(18, 20, 23, 0.2); \n    }\n\n    @media (max-width: 560px) {\n       display: none;\n  };\n`;\n\n\n\nexport const Price = styled.span`\n     color: ${color.BrightGreen};\n`\n\nexport const FullName = styled.h2`\n    margin-bottom: 32px;\n    line-height: 1;\n`\n\n\nexport const BlockSkills = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    margin-bottom: 16px;  \n`\n\nexport const BlockShortInformationsTeacher = styled.div`\n    display: flex;\n    gap:2px;   \n`\nexport const LanguagesUnderlined = styled.p`\n    text-decoration: underline;   \n`\n\nexport const ReadMoreBtn = styled.button`\n    font-weight: 500;\n    margin-bottom: 32px;\n    font-size: 16px;\n    background: transparent;\n    text-decoration: underline; \n\n    &:hover {\n        text-decoration: none; \n    }\n`\n\n\nexport const LevelsList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: 1.14;\n`\n\nexport const LevelLanguage = styled.li`\n    padding: 8px 12px;\n    border-radius: 35px;\n    border: 1px solid rgba(18, 20, 23, 0.2);\n\n    &:first-child {\n        border-color: transparent;\n        background: ${color.darkGgeen}\n    }\n`\n\n//////////////////////////////////////////////////////\n\nexport const TrialLessonBtn = styled.button`\n    font-weight: 700;\n    font-size: 18px;\n    margin-top: 32px;\n    background: transparent;\n    padding: 16px 48px 16px 48px;\n    background: ${color.darkGgeen};\n    border-radius: 12px;\n\n    transition: background 0.25s linear;\n    &:hover,\n    &:focus {    \n      background: ${color.lightGreene}; \n    }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const Experience = styled.p`\n    \n    margin-bottom: 32px;\n    \n`\n\nexport const CustomerReviewBlock = styled.li`\n    \n    margin-bottom: 32px;\n    \n`\nexport const ClientData = styled.div`\n    display: flex;\n    gap: 12px;\n    margin-bottom: 16px;\n    \n`\n\nexport const ClientImg = styled.img`\n    width: 44px;\n    border-radius: 50%; \n        \n`\n\nexport const ClientName = styled.h4`\n    font-weight: 500;\n    color: ${color.subtitleColor};\n        \n`\n\nexport const ClientGrade = styled.p`\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n        \n`","import { ClientData, ClientGrade, ClientImg, ClientName, CustomerReviewBlock, Experience } from \"./EducationalBkg.styled\";\nimport unknownImage from \"../../img/unknown-img.jpg\"\nimport sprite from '../../img/svg-file.svg';\n\nexport default function EducationalBkg({experience, reviews}) {\n    return ( \n        <>\n            <Experience>{experience}</Experience>\n            <ul>\n                {reviews.map(({reviewer_name, reviewer_rating, comment }, id) => (\n                    <CustomerReviewBlock key={id}>\n                        <ClientData>\n                            <ClientImg src={unknownImage} alt={reviewer_name} />\n                            <div>\n                                <ClientName>{reviewer_name}</ClientName>\n                                <ClientGrade>\n                                    <svg width={16} height={16}>\n                                        <use href={`${sprite}#icon-star`} />\n                                    </svg>\n                                    {reviewer_rating}.0\n                                </ClientGrade>\n                            </div>\n                        </ClientData>\n                        <p>{comment}</p>\n                    </CustomerReviewBlock>\n                ))}\n            </ul>\n        </>  \n    );\n}","import React, { useState } from 'react';\nimport {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../img/svg-file.svg';\nimport { BtnClose, CheckBoxActive, CheckBoxActiveWrapper, FormGroup, GreenRadio, LabelRadio, Modal,  ModalTextTrail, ModalTitle, TitleOfRadioBtns, WrapperModalTrail, YourTeacher, YourTeacherBlock, YourTeacherImg, YourTeacherNane } from './LoginAndRegisterStyled/Modal.styled';\nimport {  FormBtn, FormField, FormFieldPassvord, FormFields } from './LoginAndRegisterStyled/Form.styled';\nimport { ErrorMessagePassword, ErrorMessageStyled } from 'components/TechersPage/TeachersPage.styled';\n\n// import radioButton from '../../img/RadioButton.jpg';\n\n\n\nconst initialValues = {\n    picked: '',\n    name: '',\n    email: '',\n    tel: '',\n  };\nconst schema = Yup.object({\n    picked:Yup.string().required('Required'),\n    name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    tel: Yup.string().required('Required')\n    .matches(/^[0-9]{10}$/, 'Phone number must contain exactly 10 digits'),\n  });\n\nexport default function TrialLessonModal({closeModals, fullName, img}) {\n    const [selectedOption, setSelectedOption] = useState(null);\n    const handleRadioChange = (value) => {\n        setSelectedOption(value);\n      };\n\n//   const handleLogin = (values) => {\n//     // Реализуйте логику для отправки данных на сервер или другую необходимую обработку\n//     console.log(values);\n//     closeModals();\n//   };\n\n  return (\n    <Modal>\n        <WrapperModalTrail>\n            <BtnClose onClick={closeModals}>\n                <svg width={32} height={32}  >\n                    <use href={`${sprite}#icon-x`} />\n                </svg>\n            </BtnClose>\n\n            <ModalTitle>Book trial lesson</ModalTitle>\n            <ModalTextTrail>Our experienced tutor will assess your current language level, discuss your learning goals, and tailor the lesson to your specific needs.</ModalTextTrail>\n\n            <YourTeacherBlock>\n                <YourTeacherImg alt={fullName} src={img} />\n                <div>\n                    <YourTeacher>Your teacher</YourTeacher>\n                    <YourTeacherNane>{fullName}</YourTeacherNane>\n                </div>                \n            </YourTeacherBlock>\n\n\n            <div>   \n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={schema}\n                    onSubmit={async (values, {resetForm, setFieldValue}) => {\n                        await new Promise((r) => setTimeout(r, 500));\n                        setFieldValue('picked', values.picked);\n                        resetForm();\n                        // alert(JSON.stringify(values, null, 2));\n                     \n                        setSelectedOption(values.picked)\n                        closeModals()\n                    }}\n                >\n                    {({ errors, touched, setFieldValue }) => (\n                        <Form>\n                            <TitleOfRadioBtns id=\"my-radio-group\">What is your main reason for learning English?</TitleOfRadioBtns>\n                            <FormGroup role=\"group\" aria-labelledby=\"my-radio-group\">\n                                <LabelRadio>\n                                {selectedOption === 'careerBusiness' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                 }   \n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Career and business\"  onChange={() => {\n                                        setFieldValue('picked', 'careerBusiness');\n                                        handleRadioChange('careerBusiness')}}/>\n                                    \n                                    Career and business\n                                </LabelRadio>\n                                <LabelRadio>\n                                {selectedOption === 'lessonForKids' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Lesson for kids\" onChange={() => {\n                                        setFieldValue('picked', 'lessonForKids');\n                                        handleRadioChange('lessonForKids')}} />\n                                    Lesson for kids\n                                </LabelRadio>\n                                <LabelRadio>\n                                {selectedOption === 'livingAbroad' &&\n                                    <CheckBoxActiveWrapper>\n                                        <CheckBoxActive></CheckBoxActive>\n                                    </CheckBoxActiveWrapper>\n                                 }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Living abroad\"  onChange={() => {\n                                        setFieldValue('picked', 'livingAbroad');\n                                        handleRadioChange('livingAbroad')}} />\n                                    Living abroad\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'exams' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Exams and coursework\" onChange={() => {\n                                        setFieldValue('picked', 'exams');\n                                        handleRadioChange('exams')}}  />\n                                    Exams and coursework\n                                </LabelRadio>\n                                <LabelRadio>\n                                    {selectedOption === 'culture' &&\n                                        <CheckBoxActiveWrapper>\n                                            <CheckBoxActive></CheckBoxActive>\n                                        </CheckBoxActiveWrapper>\n                                     }\n                                    <GreenRadio type=\"radio\" name=\"picked\" value=\"Culture, travel or hobby\"  onChange={() => {\n                                        setFieldValue('picked', 'culture');\n                                        handleRadioChange('culture')}} />\n                                    Culture, travel or hobby\n                                </LabelRadio>\n                                </FormGroup>\n                                <ErrorMessagePassword name='picked' component='div' />\n\n                            <FormFields>        \n\n                                <FormField name=\"name\" type=\"name\" placeholder=\"Full Name\" style={{\n                                    borderColor:\n                                        errors.name && touched.name ? \"red\" : null,\n                                    }}\n                                />\n                                <ErrorMessageStyled name=\"name\" component='div' />\n\n                                <FormField name=\"email\" type=\"email\" placeholder=\"Email\" style={{\n                                    borderColor:\n                                        errors.email && touched.email ? \"red\" : null,\n                                    }}  \n                                />\n                                <ErrorMessageStyled name=\"email\" component='div' />               \n\n                                <FormFieldPassvord  name=\"tel\" type=\"tel\" placeholder=\"Phone number\"  style={{\n                                    borderColor:\n                                        errors.tel && touched.tel ? \"red\" : null,\n                                    }} \n                                />               \n                                <ErrorMessagePassword name=\"tel\" component='div' />\n                \n                            </FormFields>\n\n                            <FormBtn type=\"submit\">Submit</FormBtn>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </WrapperModalTrail>\n    </Modal>\n  );\n}\n","import { ActiveGreenSvg, BlockShortInformationsTeacher, BlockSkills, BorderImgCard, CardHeartBtn, Divider, FullName, ImgCard, ImgCardConteiner, InformCardConteiner, InformShortCardConteiner, LanguagesUnderlined, LessonsOnline, LevelLanguage, LevelsList, MainInfBlock, Price, Rating, ReadMoreBtn, Subtitle, TrialLessonBtn, WraperCard } from \"./TeacherCard.styled\";\nimport sprite from '../../img/svg-file.svg';\nimport { useEffect, useState } from \"react\";\nimport EducationalBkg from \"components/EducationalBkg/EducationalBkg\";\nimport TrialLessonModal from \"components/LoginAndRegisterModal/TrialLessonModal\";\nimport { auth } from '../../firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\n\n  export default function TeacherCard({teacher}) {\n    const [expanded, setExpanded] = useState(false);\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [trailLessonModalOpen, setTrailLessonModalOpen] = useState(false);\n\n    useEffect(() => {\n      // Подписываемся на события изменения статуса аутентификации\n      const unsubscribe = onAuthStateChanged(auth, (user) => {\n        const userId = user?.uid;\n        const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n        setIsFavorite(storedFavorites.some(fav => fav.avatar_url === teacher.avatar_url));\n      });\n    \n      return () => unsubscribe();\n    }, [teacher.avatar_url]);\n\n\n    const openLoginModal = () => {\n      setTrailLessonModalOpen(true);\n    };\n    const closeModals = () => {\n      // console.log('Closing modals');\n      setTrailLessonModalOpen(false);\n  };\n    const handleReadMoreClick = () => {\n      setExpanded((prevExpanded) => !prevExpanded);\n    };\n\n    const handleHeartClick = () => {\n      const userId = auth.currentUser?.uid;\n      if (userId) {\n        const newIsFavorite = !isFavorite;\n        setIsFavorite(newIsFavorite);\n  \n        const storedFavorites = JSON.parse(localStorage.getItem(`favorites-${userId}`)) || [];\n  \n        if (newIsFavorite) {\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify([...storedFavorites, teacher]));\n        } else {\n          const updatedFavorites = storedFavorites.filter((fav) => fav.avatar_url !== teacher.avatar_url);\n          localStorage.setItem(`favorites-${userId}`, JSON.stringify(updatedFavorites));\n        }        \n      } else {\n        alert(\"Для добавления в избранное вам необходимо войти в систему.\");\n      }\n    };\n\n\n    return (   \n        <WraperCard>\n          <CardHeartBtn onClick={handleHeartClick} >\n            <svg width={26} height={26} >\n              <use href={`${sprite}#${isFavorite ? 'icon-heart-active' : 'icon-normal-heart'}`} />\n            </svg>\n          </CardHeartBtn>\n\n          <ImgCardConteiner>\n          <BorderImgCard>\n              <ImgCard src={teacher.avatar_url} alt=\"teachers photo\" />\n              <ActiveGreenSvg width={12} height={12} >\n                <use href={`${sprite}#icon-geen-circle`} />\n              </ActiveGreenSvg>\n\n            </BorderImgCard>               \n          </ImgCardConteiner>\n\n            <InformCardConteiner>\n                <MainInfBlock>\n                  <Subtitle>Languages</Subtitle>      \n        <InformShortCardConteiner>\n                  <LessonsOnline>\n                    <svg width={16} height={16}>\n                      <use href={`${sprite}#icon-book-open`} />\n                    </svg>\n                    Lessons online\n                  </LessonsOnline>\n                  <Divider />\n                  <p>Lessons done: <span>{teacher.lessons_done}</span></p>\n                  <Divider />\n                  <Rating>\n                    <svg width={16} height={16}>\n                      <use href={`${sprite}#icon-star`} />\n                    </svg>\n                    Rating: <span>{teacher.rating}</span>\n                  </Rating>\n                  <Divider />\n                  <p>Price / 1 hour: <Price> {teacher.price_per_hour}$</Price></p>\n          </InformShortCardConteiner>\n                    \n                </MainInfBlock>\n\n                <FullName>{teacher.name} {teacher.surname}</FullName>\n\n                <BlockSkills>\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Speaks:</Subtitle>\n                    <LanguagesUnderlined>{teacher.languages.join(', ')}</LanguagesUnderlined>\n                  </BlockShortInformationsTeacher>\n\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Lesson Info:</Subtitle>\n                    <p>{teacher.lesson_info}</p>\n                  </BlockShortInformationsTeacher>\n\n                  <BlockShortInformationsTeacher>\n                    <Subtitle>Conditions:</Subtitle>\n                    <p>{teacher.conditions}</p>\n                  </BlockShortInformationsTeacher>\n                </BlockSkills>\n\n                {expanded && <EducationalBkg experience={teacher.experience} reviews={teacher.reviews}/>}\n                {!expanded  && <ReadMoreBtn onClick={handleReadMoreClick}>Read more</ReadMoreBtn>}            \n                \n\n                <LevelsList>\n                    {teacher.levels.map((language) => (\n                        <LevelLanguage key={language} >\n                          #{language}\n                        </LevelLanguage>\n                    ))}\n                </LevelsList>\n\n                {expanded && <TrialLessonBtn onClick={openLoginModal}  >Book trial lesson</TrialLessonBtn>}\n                \n                {trailLessonModalOpen && <TrialLessonModal closeModals={closeModals} img={teacher.avatar_url} fullName={`${teacher.name} ${teacher.surname}`} />}\n            </InformCardConteiner>\n        </WraperCard>      \n    );\n  }"],"names":["ButtonLoadMore","styled","_templateObject","_taggedTemplateLiteral","color","BtnLoadMore","_ref","handleLoadMore","_jsx","onClick","children","WraperMenu","TitleMenu","_templateObject2","Dropdown","_templateObject3","_templateObject4","DropdownButton","_templateObject5","props","width","DropdownList","_templateObject6","DropdownItem","_templateObject7","languages","levels","prices","FilterMenu","_useState","useState","_useState2","_slicedToArray","selectedLanguage","setSelectedLanguage","_useState3","_useState4","selectedLevels","setSelectedLevels","_useState5","_useState6","selectedPrices","setSelectedPrices","handleMenuChange","value","setValue","_jsxs","map","language","index","level","price","WraperCard","CardHeartBtn","ImgCardConteiner","BorderImgCard","ImgCard","ActiveGreenSvg","InformCardConteiner","MainInfBlock","_templateObject8","Subtitle","_templateObject9","InformShortCardConteiner","_templateObject10","LessonsOnline","_templateObject11","Rating","_templateObject12","Divider","_templateObject13","Price","_templateObject14","FullName","_templateObject15","BlockSkills","_templateObject16","BlockShortInformationsTeacher","_templateObject17","LanguagesUnderlined","_templateObject18","ReadMoreBtn","_templateObject19","LevelsList","_templateObject20","LevelLanguage","_templateObject21","TrialLessonBtn","_templateObject22","Experience","CustomerReviewBlock","ClientData","ClientImg","ClientName","ClientGrade","EducationalBkg","experience","reviews","_Fragment","_ref2","id","reviewer_name","reviewer_rating","comment","src","alt","height","href","concat","sprite","initialValues","picked","name","email","tel","schema","Yup","required","min","matches","TrialLessonModal","closeModals","fullName","img","selectedOption","setSelectedOption","handleRadioChange","Modal","WrapperModalTrail","BtnClose","ModalTitle","ModalTextTrail","YourTeacherBlock","YourTeacherImg","YourTeacher","YourTeacherNane","Formik","validationSchema","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","values","resetForm","setFieldValue","_context","prev","next","Promise","r","setTimeout","stop","_x","_x2","apply","arguments","_ref4","errors","touched","Form","TitleOfRadioBtns","FormGroup","role","LabelRadio","CheckBoxActiveWrapper","CheckBoxActive","GreenRadio","type","onChange","ErrorMessagePassword","component","FormFields","FormField","placeholder","style","borderColor","ErrorMessageStyled","FormFieldPassvord","FormBtn","TeacherCard","teacher","expanded","setExpanded","isFavorite","setIsFavorite","trailLessonModalOpen","setTrailLessonModalOpen","useEffect","unsubscribe","onAuthStateChanged","auth","user","userId","uid","storedFavorites","JSON","parse","localStorage","getItem","some","fav","avatar_url","_auth$currentUser","newIsFavorite","setItem","stringify","_toConsumableArray","updatedFavorites","filter","alert","lessons_done","rating","price_per_hour","surname","join","lesson_info","conditions","prevExpanded"],"sourceRoot":""}